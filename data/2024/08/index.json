{
    "list": [
        {
            "date": "2024-08-01T15:12:02.259Z",
            "title": "tsconfig.json の include オプションには何を指定すべきか - mizdra's blog",
            "url": "https://www.mizdra.net/entry/2024/07/27/193815",
            "content": "tsconfig.jsonの`includes`オプションについて",
            "tags": [
                "TypeScript",
                "article"
            ],
            "relatedLinks": []
        },
        {
            "date": "2024-08-03T05:06:46.146Z",
            "title": "【2024年夏】ブラウザ拡張機能開発を加速するフレームワーク・ツール3選をコードベース付きで紹介！",
            "url": "https://zenn.dev/cybozu_frontend/articles/introduction-browser-extensions-tools",
            "content": "ブラウザ拡張を開発するツールであるWXT/Plasmo/Extension.jsについて",
            "tags": [
                "browser",
                "Extension",
                "article",
                "library"
            ],
            "relatedLinks": []
        },
        {
            "date": "2024-08-03T06:21:03.003Z",
            "title": "Announcing typescript-eslint v8 | typescript-eslint",
            "url": "https://typescript-eslint.io/blog/announcing-typescript-eslint-v8/",
            "content": "typescript-eslint v8リリース。\nESLint 9のサポート、`projectService`をStableに変更、プリセットのルール変更など",
            "tags": [
                "TypeScript",
                "ESLint",
                "ReleaseNote"
            ],
            "relatedLinks": []
        },
        {
            "date": "2024-08-03T06:23:48.584Z",
            "title": "React Conf 2024 Talks",
            "url": "https://conf.react.dev/talks",
            "content": "React Conf 2024の動画まとめ",
            "tags": [
                "React",
                "video"
            ],
            "relatedLinks": []
        },
        {
            "date": "2024-08-03T06:35:45.648Z",
            "title": "Patterns for Memory Efficient DOM Manipulation with Modern Vanilla JavaScript – Frontend Masters Boost",
            "url": "https://frontendmasters.com/blog/patterns-for-memory-efficient-dom-manipulation/",
            "content": "DOM APIでのDOMの変更を効率的に行う方法について。\n`textContent`と`innerText`、`insertAdjacentHTML`と`innerHTML`、DOM Nodeの削除とGC、イベントリスナーのクリーンアップなどについて",
            "tags": [
                "DOM",
                "performance",
                "article"
            ],
            "relatedLinks": []
        }
    ]
}
